{"ast":null,"code":"var _jsxFileName = \"/Users/unai/Desktop/bootcamp/Frontend/blogcrud/src/components/PostForm.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostForm = _ref => {\n  _s();\n  let {\n    onSubmit,\n    post\n  } = _ref;\n  const [title, setTitle] = useState(post ? post.title : \"\"); // con esto aparece el contenido del formulario par editar\n  const [body, setBody] = useState(post === null || post === void 0 ? void 0 : post.body); // esto es igual q el de arriba perode otra forma de hacerlo.\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const post = {\n      title,\n      body\n    };\n    onSubmit(post);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"title\",\n      children: \"Titulo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"title\",\n      value: title,\n      onChange: e => setTitle(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"title\",\n      children: \"Contenido\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      type: \"text\",\n      id: \"title\",\n      value: body,\n      onChange: e => setBody(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: post ? \"guardar\" : \"crear\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_s(PostForm, \"Q/FqLemMsMnxcLKEvcBqWLV04Vg=\");\n_c = PostForm;\nexport default PostForm;\nvar _c;\n$RefreshReg$(_c, \"PostForm\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","PostForm","_ref","_s","onSubmit","post","title","setTitle","body","setBody","handleSubmit","e","preventDefault","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","value","onChange","target","_c","$RefreshReg$"],"sources":["/Users/unai/Desktop/bootcamp/Frontend/blogcrud/src/components/PostForm.jsx"],"sourcesContent":["import { useState } from \"react\";\n\n\nconst PostForm =({onSubmit,post}) =>{\nconst [title, setTitle] = useState(post? post.title : \"\"); // con esto aparece el contenido del formulario par editar\nconst [body, setBody] = useState(post?.body); // esto es igual q el de arriba perode otra forma de hacerlo.\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const post = {title, body};\n        onSubmit (post);\n        \n}\n\nreturn (\n\n    <form onSubmit={handleSubmit}>\n        <label htmlFor=\"title\">Titulo</label>\n        <input type=\"text\" id=\"title\" value={title} onChange={(e) => setTitle(e.target.value)} /> {/* cada ve q lo cambia lo guarda en el estado */}\n        <label htmlFor=\"title\">Contenido</label>\n        <textarea type=\"text\" id=\"title\" value={body} onChange={(e) => setBody(e.target.value)}></textarea>\n        <button type=\"submit\" >{post ? \"guardar\" : \"crear\"}</button> {/* ternario que si no es guardar sino crear */}\n    </form>\n\n);\n\n}\n\nexport default PostForm;"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGjC,MAAMC,QAAQ,GAAEC,IAAA,IAAoB;EAAAC,EAAA;EAAA,IAAnB;IAACC,QAAQ;IAACC;EAAI,CAAC,GAAAH,IAAA;EAChC,MAAM,CAACI,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAACO,IAAI,GAAEA,IAAI,CAACC,KAAK,GAAG,EAAE,CAAC,CAAC,CAAC;EAC3D,MAAM,CAACE,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAACO,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEG,IAAI,CAAC,CAAC,CAAC;;EAE1C,MAAME,YAAY,GAAIC,CAAC,IAAK;IACxBA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,MAAMP,IAAI,GAAG;MAACC,KAAK;MAAEE;IAAI,CAAC;IAC1BJ,QAAQ,CAAEC,IAAI,CAAC;EAEvB,CAAC;EAED,oBAEIL,OAAA;IAAMI,QAAQ,EAAEM,YAAa;IAAAG,QAAA,gBACzBb,OAAA;MAAOc,OAAO,EAAC,OAAO;MAAAD,QAAA,EAAC;IAAM;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACrClB,OAAA;MAAOmB,IAAI,EAAC,MAAM;MAACC,EAAE,EAAC,OAAO;MAACC,KAAK,EAAEf,KAAM;MAACgB,QAAQ,EAAGX,CAAC,IAAKJ,QAAQ,CAACI,CAAC,CAACY,MAAM,CAACF,KAAK;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,KAAC,eAC1FlB,OAAA;MAAOc,OAAO,EAAC,OAAO;MAAAD,QAAA,EAAC;IAAS;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACxClB,OAAA;MAAUmB,IAAI,EAAC,MAAM;MAACC,EAAE,EAAC,OAAO;MAACC,KAAK,EAAEb,IAAK;MAACc,QAAQ,EAAGX,CAAC,IAAKF,OAAO,CAACE,CAAC,CAACY,MAAM,CAACF,KAAK;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAW,CAAC,eACnGlB,OAAA;MAAQmB,IAAI,EAAC,QAAQ;MAAAN,QAAA,EAAGR,IAAI,GAAG,SAAS,GAAG;IAAO;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS,CAAC,KAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3D,CAAC;AAIX,CAAC;AAAAf,EAAA,CAvBKF,QAAQ;AAAAuB,EAAA,GAARvB,QAAQ;AAyBd,eAAeA,QAAQ;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}